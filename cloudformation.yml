AWSTemplateFormatVersion: 2010-09-09
Description: Scehduled lambda to poll lifx api and store the current state of lightbulbs
Parameters:
  LifxApiUrl:
    Type: String
    Description: Lifx Api Url
    Default: https://api.lifx.com
  LifxToken:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Lifx Api Token
  LambdaSchedule:
    Type: String
    Description: Cloudwatch Event Rule ScheduleExpression for invoking the lambda function
    Default: rate(5 minutes)
  ReadCapacity:
    Type: Number
    Description: Provisioned read throughput for the State DynamoDB Table
    Default: 1
  SnsTopicArn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Sns Topic to send change notification to
  WriteCapacity:
    Type: Number
    Description: Provisioned write throughput for the State DynamoDB Table
    Default: 1
Resources:
  NotifyChangeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: SyncStatePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: !GetAtt State.StreamArn
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref SnsTopicArn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
  SyncStateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: SyncStatePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:describetable
                  - dynamodb:putitem
                Resource: !GetAtt State.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
  NotifyChange:
    Type: AWS::Lambda::Function
    Properties:
      Handler: PollLifx.NotifyChange::PollLifx.NotifyChange.Function::FunctionHandler
      Role: !GetAtt NotifyChangeRole.Arn
      Code: ./PollLifx.NotifyChange/bin/Release/netcoreapp2.1/PollLifx.NotifyChange.zip
      MemorySize: 256
      Runtime: dotnetcore2.1
      Timeout: 15
      Environment:
        Variables:
          LifxApiUrl: !Ref SnsTopicArn
  SyncState:
    Type: AWS::Lambda::Function
    Properties:
      Handler: PollLifx.SyncState::PollLifx.SyncState.Function::FunctionHandler
      Role: !GetAtt SyncStateRole.Arn
      Code: ./PollLifx.SyncState/bin/Release/netcoreapp2.1/PollLifx.SyncState.zip
      MemorySize: 256
      Runtime: dotnetcore2.1
      Timeout: 15
      Environment:
        Variables:
          LifxApiUrl: !Ref LifxApiUrl
          LifxToken: !Ref LifxToken
          DynamoDbTableName: !Ref State
  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: ScheduledRule
      ScheduleExpression: !Ref LambdaSchedule
      State: ENABLED
      Targets:
        - Arn: !GetAtt SyncState.Arn
          Id: TargetFunction
  ScheduledRuleLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SyncState
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ScheduledRule.Arn
  State:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref ReadCapacity
        WriteCapacityUnits: !Ref WriteCapacity
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  StateNotifyChangeMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt State.StreamArn
      FunctionName: !GetAtt NotifyChange.Arn
      StartingPosition: LATEST
